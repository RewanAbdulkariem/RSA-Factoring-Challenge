#!/usr/bin/python3
import sys
import math
import signal
import time

TIMEOUT_DURATION = 5


def handler(signum, frame):
    '''
    Signal handler function.
    '''
    print("Error: Time limit exceeded")
    sys.exit(1)


def factorize_number(n):
    '''
    Factorizes a given number into two smaller numbers (non-prime factors).
    Args:
        n (int): The number to be factorized.
    '''
    if n % 2 == 0:
        print("{:d}={:d}*{:d}".format(n, n // 2, 2))
        return 2
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        if n % i == 0:
            print("{:d}={:d}*{:d}".format(n, n // i, i))
            return i
    print("{:d}={:d}*{:d}".format(n, n, 1))


def main(file_path):
    '''
    Reads numbers from a file and factorizes them using factorize_number
    function.
    Args:
        file_path (str): The path to the input file containing numbers
        to be factorized.
    '''
    try:
        with open(file_path, "r") as fptr:
            for line in fptr:
                line = int(line.strip())
                factorize_number(line)
    except FileNotFoundError:
        print(f"Error: can't open file {filename}")
        sys.exit(1)


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
        sys.exit(1)

    file_path = sys.argv[1]

    signal.signal(signal.SIGALRM, handler)
    signal.alarm(TIMEOUT_DURATION)
    try:
        start_time = time.time()
        main(file_path)
        end_time = time.time()
    except Exception as e:
        print(f"Error: {e}")
    finally:
        signal.alarm(0)
